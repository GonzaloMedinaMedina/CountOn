<div>@msg</div>
<Chart Config="_config1" @ref="_chart1"></Chart>

@code {
    private BarChartConfig _config1;
    private Chart _chart1;
    private string msg = "hello";

    protected override void OnInitialized()
    {
        base.OnInitialized();

        _config1 = new BarChartConfig()
            {
                Options = new Options()
                {
                    Plugins = new Plugins()
                    {
                        Legend = new Legend()
                        {
                            Align = Align.Center,
                            Display = false,
                            Position = LegendPosition.Right
                        }
                    },
                    Scales = new Dictionary<string, Axis>()
                    {
                        {
                            Scales.XAxisId, new Axis()
                            {
                                Stacked = true,
                                Ticks = new Ticks()
                                {
                                    MaxRotation = 0,
                                    MinRotation = 0
                                }
                            }
                        },
                        {
                            Scales.YAxisId, new Axis()
                            {
                                Stacked = true
                            }
                        }
                    },
                    OnClickAsync = clickAsync
                }
            };

        decimal num1 = 500;
        decimal num2 = 200;

        _config1.Data.Labels = new List<string>() { "January", "February", "March", "April", "May", "June", "July" };
        _config1.Data.Datasets.Add(new BarDataset()
            {
                Label = "Value",
                Data = new List<decimal?>() {
             65, 59, 80, 81, 56, 55, 40 },
                BackgroundColor = new List<string>() { "rgb(255, 0, 0)" },
                BorderColor = new List<string>() { "rgb(255, 0, 0)" },
                BorderWidth = 3,
                Fill = true
            });

    }

    public ValueTask clickAsync(CallbackGenericContext value)
    {
        msg = $"Dataset index: {value.DatasetIndex} - " +
                        $"Value index: {value.DataIndex} - " +
                        $"Value: {value.Value}";
        StateHasChanged();

        return ValueTask.CompletedTask;
    }
}
